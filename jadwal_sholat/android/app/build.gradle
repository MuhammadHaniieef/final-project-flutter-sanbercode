plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    // Flutter plugin harus setelah Android & Kotlin
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}
def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

// ---- BACA key.properties (UNTUK SIGNING RELEASE)
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    // Boleh beda dengan applicationId; tidak mempengaruhi Firebase
    namespace = "com.example.jadwal_sholat"

    compileSdk = flutter.compileSdkVersion
    ndkVersion "26.1.10909125"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = "17" }

    defaultConfig {
        // HARUS SAMA dengan package_name di google-services.json
        applicationId = "jadwalsholat.com"

        // Firebase modern butuh minSdk >= 23
        minSdk = Math.max(23, flutter.minSdkVersion)
        targetSdk = flutter.targetSdkVersion

        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    // ---- SIGNING RELEASE pakai key.properties
    signingConfigs {
        release {
            // kalau keystorenya di folder android/, set ../keystore.jks
            // kalau kamu pindah ke android/app/, set keystore.jks
            storeFile file(keystoreProperties["storeFile"])
            storePassword keystoreProperties["storePassword"]
            keyAlias keystoreProperties["keyAlias"]
            keyPassword keystoreProperties["keyPassword"]
        }
    }

    buildTypes {
        release {
            // WAJIB: pakai signing RELEASE (bukan debug)
            signingConfig signingConfigs.release

            // Boleh dimatikan dulu; aktifkan nanti kalau sudah stabil
            // minifyEnabled true
            // shrinkResources true
            // proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // default: signed with debug keystore
        }
    }
}

flutter {
    source = "../.."
}
